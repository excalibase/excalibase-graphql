image: docker:28-dind
services:
  - docker:28-dind

variables:
  VARIABLE_DATA: Gitlab-CI-YAML
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2
  AGENT_NAME: pegasus-ims-agent
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

cache:
  paths:
    - ./.m2/repository
  # keep cache across branch
  key: "$CI_BUILD_REF_NAME"

stages:
  - package
  - build

before_script:
  - export IMAGE=$CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  - export WEB_IMAGE=$IMAGE:web
  - echo $IMAGE:web
  - echo $CI_REGISTRY_USER
  - echo $CI_JOB_TOKEN
  - echo $CI_REGISTRY
  - echo $CI_REGISTRY_IMAGE

package:
  image: maven:3.9.10-amazoncorretto-21-al2023
  stage: package
  script:
    - mvn clean install
  artifacts:
    when: always
    paths:
      - target/*.jar
    expire_in: 1 week

build:
  image: docker:28-dind
  stage: build
  services:
    - docker:28-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t excalibase/excalibase-graphql:$CI_COMMIT_SHA -t excalibase/excalibase-graphql:latest .
    - docker push excalibase/excalibase-graphql:$CI_COMMIT_SHA
    - docker push excalibase/excalibase-graphql:latest
  only:
    - main